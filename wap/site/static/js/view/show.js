define(['backbone', 'model/user', 'model/note', 'gmu', 'helper'], function(Backbone, user, note, gmu, Helper){    return Backbone.View.extend({        el: 'body',        initialize: function(options){            this.toolbar = new gmu.Toolbar('.toolbar .wrap', {                title: '',                leftBtns: ['<a href="javascript:void(0)" class="backBtn"><span>返回</span></a>'],                rightBtns: [                    '<a href="javascript:void(0)" class="moreBtn"><span>More</span></a>',                    '<a href="javascript:void(0)" class="editBtn"><span>编辑</span></a>'                ],                fixed: true            });                        this.toolbarSub = new gmu.Toolbar('.toolbarsub .wrap', {                title: '',                leftBtns: ['<a href="javascript:void(0)" class="backBtn"><span>返回</span></a>'],                rightBtns: ['<a href="javascript:void(0)" class="saveBtn"><span>保存</span></a>']            });                        this.template = _.template($('#popupmenu').html());            this.user = new user(true);            this.note = new note();            this.note.id = options.noteID;            this.note.getNote(this.user.id, this);            //需要#content为相对定位才起作用            //this.iscroll = new gmu.Refresh('#content', {iScrollOpts: {fadeScrollbar: true}});            this.iscroll = new iScroll('content', {checkDOMChanges: true, onBeforeScrollStart: function(e){                var tag = e.explicitOriginalTarget? e.explicitOriginalTarget : (e.target ? e.target : ''),                    tagName = tag.nodeName.toLowerCase(),                    isEditable = $(tag).closest('.detail[contenteditable=true]').length > 0;                if(!isEditable && _.indexOf(['select', 'option', 'input', 'textarea', 'button'], tagName) == -1){                    e.preventDefault();                }            }});                        $('body').on('click', function(e){ //'ontap' in window                var tag = $(e.explicitOriginalTarget? e.explicitOriginalTarget : (e.target ? e.target : ''));                if(!tag.hasClass('.moreBtn') && !tag.hasClass('.popup-menu') && tag.closest('.moreBtn').length == 0 && tag.closest('.popup-menu').length == 0){                    $('.popup-menu').hide();                }            });        },                events: {            'click .toolbar .backBtn': 'backList',            'click .toolbar .editBtn': 'edit',            'click .toolbar .moreBtn': 'more',            'click .toolbarsub .backBtn': 'backDetail',            'click .toolbarsub .saveBtn': 'save',            'click .popup-menu .del': 'del',            'click .popup-menu .markd': 'markd',            'click .downWrap .closeBtn': 'closeDown',            'click .todo': 'todoMask',            'click .audiobox': 'todoMask'        },                backList: function(e){            window.location.href = '/m/notes#list';        },                todoMask:function(){             var downbox =  $('#downbox'),                link = downbox && downbox.attr('link');      		if(!link) return;            var size = function(){                var oSize;                return function(){                    if(oSize){                        return oSize;                    }else{                        (oSize = {}).width = $('body').width() * 0.8;                        oSize.height = $('body').height() * 0.8;                    }                    return oSize;                }                            }();            var mask = Helper.mask.show(),                //str = '<div class="downWrap"><a class="closeBtn" href="javascript:;"></a><p class="info">仅支持待办的查看和阅读<br/>如需编辑和创建<br/>请下载乐云记事官方APP</p><a class="downBtn" href="javascript:;">前往下载</a></div>';                str = _.template($('#downbox').html())(),                height = size().height - $('.toolbarcontainer').height() - $('#footerLite').height(),                marTop = size().height/1.6 - height/2;            mask.append(str);            $("div.downWrap").css({                'width' : size().width,                'height' : height,                'margin-top' : marTop            });        },        edit: function(e){            var isTodo = this.note.get('styleType') == 1000;            if(isTodo){                this.todoMask();            }else{                $('.toolbarsubcontainer').show();                $('.titlecontainer input.title').removeAttr('readonly');                $('.contentcontainer .detail').attr('contenteditable', true);            }                    },                more: function(e){            e.stopPropagation();            $('.popup-menu').toggle();        },                backDetail: function(e){            //window.location.href = '/m/note/' + this.note.id + '#~/' + this.note.id;            $('.toolbarsubcontainer').hide();            $('.titlecontainer input.title').attr('readonly', 'readonly');            $('.contentcontainer .detail').removeAttr('contenteditable');        },                save:function(e){            var title = $('.titlecontainer input.title').val(),                content = $('.contentcontainer .detail').html();            this.note.saveNote(this.user.id, this, title, content);        },                markd: function(e){            this.note.markdNote(this.user.id, this);        },                del: function(){            this.note.delNote(this.user.id, this);        },                show: function(model){            var todos = model.styleType == 1000,                audio = model.styleType == 201,                html = '';            if(audio){        		var resources = model.resources,        				audioUi = [],        				toTime = function(time){        					var s = time/1000,        							m = Math.floor(s/60),        							over = s % 60;        					return {            						m: m,            						s: over        					}        				},        				adjust = function(num){							return num >= 0 && num < 10 ? '0'+ num : num;						};        		for(var i = 0; i< resources ? resources.length : 0; i++){        				var res = resources[i];        				if(res.resourceType == 521){        						var ms = toTime(res.fullTime);        						audioUi.push('<div class="audiobox">');        						audioUi.push(dateFormat(res.createTime, 'mm月dd日 周N HH:MM')+'<br/>');        						audioUi.push('记录了'+adjust(ms.m)+'分'+adjust(ms.s)+'秒的语音笔记');        						audioUi.push('<span class="audiomask">'+ms.m+'\''+ms.s+'"</span>');        						audioUi.push('</div>');        				}        		}        		var str = audioUi.join(''),        				week = ["日","一","二","三","四","五","六"];        		str = str.replace(/周(\d)/g,function(a,b){        				return '周'+week[b];        		});        		$('#content > .wrap').before(str);                $('.titlecontainer').hide();            }            if(todos){                var sources = model.resources,                    notChecked = $("<div class='notChecked'></div>"),                    isChecked = $("<div class='isChecked'></div>");                for(var i= 0; i< sources.length; i++){                    var src = sources[i],                        div = $("<div class='todo clearfix'></div>"),                        title = $("<span class='title'></span>"),                        time = $("<span class='time'></span>");                    title.html(Helper.filterXSS(src.description.content));                    src.description.startTime && time.html(dateFormat(src.description.startTime, "mm/dd HH:MM"));                    (src.description.checked ? isChecked : notChecked).append(div.append(title).append(time));                }                var notCheckLen = notChecked.children().length,                    isCheckLen = isChecked.children().length,                    addTodo = '<div class="rightIcon"><div class="todo clearfix">添加待办事宜</div></div>';                //if(notCheckLen > 0) notChecked.children().first().addClass("select").wrap("<div class='rightIcon'></div>");                if(isCheckLen > 0) isChecked.children().first().before("<div class='tip'>已完成("+isCheckLen+")</div>");                html = addTodo + notChecked.get(0).outerHTML + isChecked.get(0).outerHTML;            }else{                html = Helper.filterXSS(model.content);            }            if(!audio) $('.titlecontainer input.title').val(Helper.filterXSS(model.title));            $('.contentcontainer .detail').html(html);            $('#notetime span.time').text(dateFormat(model.lastUpdateTime, 'yyyy-mm-dd hh:MM'));                        $('body').append(this.template({                menu: [                    {c: 'markd', name: model.isMarked? '取消星标' : '添加星标'},                    {c: 'del last', name: '删除'}                ]            }));        },        closeDown:function(){            Helper.mask.hide();        }    });});