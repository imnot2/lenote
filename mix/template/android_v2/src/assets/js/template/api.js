(function(template){    //供模板开发者使用的API    //lenote.template.api.setConfig(options).hooks.init = function(){}    //var api = template.api = {    template.api = {        isInitConfig: false, //是否已初始化配置                //设置模板的自定义的配置        setConfig: function(options){            template.setOptions(options || {});            this.isInitConfig = true;            return this;        },                //扩展api自定义的接口, @m为api的成员名-如hooks，o为自定义的api        extend: function(m, o){            if(!this.isInitConfig) this.setConfig();            helper.extend2(this[m], o, false, true, true);        },                //提供给模板的sdk钩子函数        hooks: {            //模板初始化完成后的回调            //jslint的注释的作用域与js的一致的，都以{}区分            init: function(deviceWidth, deviceHeight){/*jslint unused: false */},            //设置模板数据时的回调, 如有的模板需要显示音频的时长、大小等            control: {                set: function(id, data){/*jslint unused: false */},                unset: function(id){/*jslint unused: false */}            }        },                //模板的属性        template: {            editable: function(){                return template.props.isEditing;            }        },                //模板助手方法        helper: {            getWidth: function(dom){                return helper.getWidth(dom);            },            getHeight: function(dom){                return helper.getHeight(dom);            }        }    };})(lenote.template);